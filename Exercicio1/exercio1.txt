:- dynamic utente/4.
:- dynamic servico/4.
:- dynamic consulta/4.

utente(1, andre, 20, braga).
utente(2, joao, 20, braga).
utente(3, luis, 21, braga).
utente(4, rafaela, 20, braga).

servico(1, dentista, hospital, braga).
servico(2, familia, clinica, braga).
servico(3, cirurgia, privado, braga).

consulta(19/3/19, 1, 3, 25).
consulta(23/4/19, 2, 1, 3).
consulta(3/3/19, 3, 3, 33).
consulta(7/6/19, 4, 2, 15).

%Questão 1
%Extensao do predicado registarU: Elemento, Elemento, Elemento, Elemento -> {V,F}
registarU(A, B, C, D) :- \+ utente(A,_,_,_) , assert(utente(A,B,C,D)).
%Extensao do predicado registarS: Elemento, Elemento, Elemento, Elemento -> {V,F}
registarS(A,B,C,D) :- \+ servico(A,_,_,_) , assert(servico(A,B,C,D)).
%Extensao do predicado registarC: Elemento, Elemento, Elemento, Elemento -> {V,F}
registarC(A,B,C,D) :- +\ utente(B,_,_,_), \+ servico(C,_,_,_), assert(consulta(A,B,C,D)).

%Questão 2
%Extensao do predicado apagarU: Elemento -> {V,F}
apagarU(X) :- utente(X,_,_,_), retract(utente(X,_,_,_)).
%Extensao do predicado apagarS: Elemento -> {V,F}
apagarS(X) :- servico(X,_,_,_), retract(servico(X,_,_,_)).
%Extensao do predicado apagarC: Elemento -> Elemento -> {V,F}
apagarC(X,Y) :- consulta(_,X,Y,_), retract(consulta(_,X,Y,_)). 


%Questão 3
%Extensao do predicado instituicao: Lista -> {V,F}
%instituicao([]) :- 

%Questão 4

%Questão 5

%Questão 6

%Questão 7

%Questão 8